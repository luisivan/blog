{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/the-power-of-knowledge-graphs-7755f29fa2ab","result":{"data":{"markdownRemark":{"id":"460184f1-791f-5d29-b869-9d5e695af95e","html":"<p>Back in the day, when I was starting <a href=\"https://blog.unpatent.co/introducing-unpatent-e9ec7b980986\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Unpatent</a> with Jorge, we were thinking about <strong>how to teach machines to invent</strong>, so they could timestamp <a href=\"https://en.wikipedia.org/wiki/Prior_art\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">prior art</a> before a patent troll could file a patent.</p>\n<p>We explored a lot of options, from graph databases to scraping the <a href=\"https://www.uspto.gov/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">USPTO</a> and running machine learning models over it.</p>\n<p>Finally, we concluded that in order to meaningfully generate new ideas, we needed computers to <strong>understand the map of existing ideas</strong> first.</p>\n<p>The general idea was as follows:</p>\n<ul>\n<li>A bike has wheels</li>\n<li>Wheels allow for movement</li>\n<li>Motors can help wheels boost movement</li>\n<li>Therefore a valid new idea could be <em>bike + motor = motorbike</em></li>\n</ul>\n<p>For a computer to understand that, you would need to <strong>map all humankind’s knowledge in a graph</strong>. There have been <a href=\"https://en.wikipedia.org/wiki/Cyc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">some attempts</a> at doing so, and we even tried to leverage on those for Unpatent:</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2048/1*8v20riQ1mTQ2DtyKYCozYA.png\"></p>\n<p>But the issue is always language. Language is subjective by design. <strong>Words don’t have formal specs and implementations</strong>, like software does.</p>\n<p><strong>Language is <a href=\"http://unenumerated.blogspot.com/2006/11/wet-code-and-dry.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">wet code, not dry code</a></strong>. This makes it so hard for computers to enter our world, understand it and build on their own.</p>\n<p>Today I won’t go into the AI rabbit hole, but rather on how we can improve our systems <strong>today</strong> using tools to reduce the gap between language and code.</p>\n<p>Currently, Wikipedia defines motorbike as:</p>\n<blockquote>\n<p>A motorcycle, often called a bike, motorbike, or cycle, is a two- or three-wheeled motor vehicle</p>\n</blockquote>\n<p>This doesn’t tell us much, specially about what it needs to be in place in order for something to be a motorbike. In an idyllic world, <strong>a word would take meaning because of its place in the knowledge graph.</strong></p>\n<p>For example, motorbike would be roughly defined as follows:</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*IZ11zX-6SC0AcbM_1zz4ZQ.png\"></p>\n<p>Of course this would be inside an infinite graph, so <em>Motorbike</em> would be related to <em>Transportation</em> somehow and <em>Battery</em> would be indirectly related to <em>Wind</em> or <em>Solar</em>.</p>\n<p>Also, the above could be expressed as code:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">graph TD\nMB[Motorbike] --&gt;|Needs| W(Wheels)\nMB[Motorbike] --&gt;|Needs| M(Motor)\n\nM(Motor) --&gt;|Needs| E(Energy)\n  E(Energy) --&gt;|Is| F(Fuel)\n  E(Energy) --&gt;|Is| B(Battery)\n\nM(Motor) --&gt;|Powers| W\n\nMB[Motorbike] --&gt;|Needs| D(Driver)\n  D(Driver) --&gt;|Is| H(Human)\n  D(Driver) --&gt;|Is| C(Computer)</code></pre></div>\n<p>This gives us some interesting properties:</p>\n<ul>\n<li>By charting the relationship between words, we <strong>enclose their meaning and reduce subjective interpretation</strong></li>\n<li>As it is a graph, you can join it to other graphs, the same way you <strong>import code</strong> or packages. This reduces the need to re-define since you could <strong>rely on a few very well vetted definitions</strong></li>\n<li>As it can be expressed as code, we can have <strong>commit history and diffs</strong> in order to see <strong>how this knowledge and its meaning evolves</strong></li>\n<li>We can do some basic <strong>testing</strong> to see if our whole graph computes! For example, we could <strong>catch conflicting definitions inside a graph</strong></li>\n</ul>\n<p>This can now sound very abstract. What are the use cases, apart from AI?</p>\n<p>I’ll enumerate a few:</p>\n<ul>\n<li>Formalize <strong>governance processes</strong>, thus increasing transparency and reducing subjectivity</li>\n<li>Write down company processes, to <strong>summarize flows</strong> in a concise manner</li>\n<li><strong>Graph out the values or the manifesto of a community</strong>, to make sure it always follows them</li>\n</ul>\n<h2 id=\"next-steps\" style=\"position:relative;\"><a href=\"#next-steps\" aria-label=\"next steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next steps</h2>\n<p>I just discovered <strong><a href=\"https://mermaidjs.github.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mermaid</a></strong>, which is a tool that allows to quickly chart by using code. I have been looking for something like this for a long time.</p>\n<p>Now <strong>I plan to start writing code for multiple processes I want to formalize</strong>, and also for my own knowledge and mental models I have been accumulating from life and reading.</p>\n<p>I’m genuinely amused by knowledge graphs, and I think they could help <strong>reduce misinterpretations</strong> and <strong>improve accuracy</strong> in how humans and organizations communicate their view of the world.</p>","fields":{"slug":"/posts/the-power-of-knowledge-graphs-7755f29fa2ab","tagSlugs":null},"frontmatter":{"date":"2018-07-18","description":"Reducing the gap between language and code","tags":null,"title":"The power of knowledge graphs","socialImage":null}}},"pageContext":{"slug":"/posts/the-power-of-knowledge-graphs-7755f29fa2ab"}}}